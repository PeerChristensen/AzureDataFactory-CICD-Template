name: Deploy Data Factory

concurrency: adf-deploy-workflow

env:
    RESOURCEGROUP_NAME: name-rg
    DATAFACTORY_NAME: name-df-prod
    ARMTEMPLATEFOLDER_NAME: name-df-devtest

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true 
    - name: Deploy resources
      uses: Azure/data-factory-deploy-action@v1.2.0
      with:
        resourceGroupName: ${{ env.RESOURCEGROUP_NAME }}
        dataFactoryName: ${{ env.DATAFACTORY_NAME }}
        armTemplateFile: ${{ env.ARMTEMPLATEFOLDER_NAME }}/ARMTemplateForFactory.json
        armTemplateParametersFile: ${{ env.ARMTEMPLATEFOLDER_NAME }}/ARMTemplateParametersForFactory.json

  role-assign:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - run: az config set extension.use_dynamic_install=yes_without_prompt
    - run: |
          export spID=$(az datafactory show \
            --name ${{ env.DATAFACTORY_NAME }} \
            --resource-group ${{ env.RESOURCEGROUP_NAME }} \
            --query identity.principalId --out tsv)
            echo "sp_id=$spID" >> $GITHUB_OUTPUT
      name: 'Get Service Principal (obj id)'
      id: get_sp_step
    - run: |
          az role assignment create --assignee ${{ steps.get_sp_step.outputs.sp_id }} \
            --role Contributor \
            --resource-group ${{ env.RESOURCEGROUP_NAME }}
      name: 'Assign role (allow ADF to start ACI)'
    
    outputs:
      sp_id: ${{ steps.get_sp_step.outputs.sp_id }}
